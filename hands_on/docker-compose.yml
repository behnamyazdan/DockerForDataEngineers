version: '3.8'

networks:
  pipeline:
    driver: bridge

services:
  redis:
    image: redis:7.2-alpine
    container_name: redis
    hostname: redis
    networks:
      - pipeline
    ports:
      - "6379:6379"
    restart: unless-stopped

  producer:
    build:
      context: producer
      dockerfile: Dockerfile
    networks:
      - pipeline
    depends_on:
      - redis
    restart: unless-stopped
    deploy:
      replicas: 3

  postgres:
    image: postgres:13-alpine
    container_name: postgres
    hostname: postgres
    networks:
      - pipeline
    ports:
      - "54321:5432"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ecommerce_docker
    command: postgres -c wal_level=logical
    restart: unless-stopped

  consumer:
    build:
      context: consumer
      dockerfile: Dockerfile
    networks:
      - pipeline
    depends_on:
      - postgres
      - producer
    restart: unless-stopped

  zookeeper:
    image: quay.io/debezium/zookeeper:2.5
    container_name: zookeeper
    hostname: zookeeper
    networks:
      - pipeline
    restart: unless-stopped

  kafka:
    image: quay.io/debezium/kafka:2.5
    container_name: kafka
    hostname: kafka
    networks:
      - pipeline
    ports:
      - "9093:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    restart: unless-stopped

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    hostname: kafka-ui
    networks:
      - pipeline
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    restart: unless-stopped

  debezium:
    image: quay.io/debezium/connect:2.5
    container_name: debezium
    hostname: debezium
    networks:
      - pipeline
    ports:
      - "8083:8083"
    environment:
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      STATUS_STORAGE_TOPIC: connect_statuses
      BOOTSTRAP_SERVERS: kafka:9092
      REST_HOST_NAME: debezium
      REST_PORT: 8083
      ADVERTISED_HOST_NAME: debezium
      ADVERTISED_PORT: 8083
    restart: unless-stopped

  debezium-ui:
    image: quay.io/debezium/debezium-ui:2.5
    container_name: debezium-ui
    hostname: debezium-ui
    networks:
      - pipeline
    ports:
      - "8086:8080"
    environment:
      KAFKA_CONNECT_URIS: http://debezium:8083
    restart: unless-stopped

  clickhouse:
    image: clickhouse/clickhouse-server:23.8-alpine
    container_name: clickhouse
    hostname: clickhouse
    networks:
      - pipeline
    ports:
      - "8123:8123"
      - "9002:9000"
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    networks:
      - pipeline
    ports:
      - "3000:3000"
    environment:
      GF_INSTALL_PLUGINS: grafana-clickhouse-datasource
    restart: unless-stopped
